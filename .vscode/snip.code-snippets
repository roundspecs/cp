{
  // Place your cp_lab workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "test case": {
    "scope": "c,cpp",
    "prefix": "tc",
    "body": [
      "int t;",
      "cin >> t;",
      "fo(tc, t) solve(tc);",
    ]
  },
  "solve func": {
    "scope": "c,cpp",
    "prefix": "sl",
    "body": [
      "void solve(int tc) {",
      "  $1",
      "}"
    ]
  },
  "input var": {
    "scope": "c,cpp",
    "prefix": "cd",
    "body": [
      "$1 $2;",
      "cin >> $2;",
      "$3"
    ]
  }
}